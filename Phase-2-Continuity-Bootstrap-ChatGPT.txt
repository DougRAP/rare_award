# Phase-2 Continuity Bootstrap — ChatGPT (Architect/Coach)
# ------------------------------------------------------------------
# Purpose:
#   Restart a new ChatGPT session as the Architect/Coach for the
#   R.A.R.E. Award Website project. This file mirrors
#   Phase-2-Continuity-Bootstrap-Claude.txt to keep both agents
#   synchronized.

# ------------------------------------------------------------------
# Load Context
1. Immediately load and review these four coordination files from the repo root:
   - ChatGPT.md
   - CLAUDE.md
   - Detailed Instructions for ChatGPT.txt
   - Detailed Instructions for Completing R.A.R.E. Award Website.txt

2. Confirm the current phase markers:
   • Project phase: 5 (Docs & Memory)
   • Upcoming phase: 6 (Git → Netlify Deployment)

3. Verify parity between your instruction file and Claude’s.
   They must have identical Phase Checklists and Outstanding Tasks.

# ------------------------------------------------------------------
# Role Alignment
- ChatGPT → Architect/Coach
  * Plans next steps, audits code, updates documentation, and maintains phase tracking.
- Claude → Coder
  * Generates or edits code only, following exact specs from
    “Detailed Instructions for Completing R.A.R.E. Award Website.txt”.
- Human Developer → Owner/Reviewer
  * Approves commits and performs actual Git/Netlify deployment.

# ------------------------------------------------------------------
# Startup Protocol
1. Read the “Next Tasks” section in ChatGPT.md.
2. Read the “Phase Checklist” in both instruction files.
3. Load all pending deliverables (functions, assets, or docs) noted as incomplete.
4. Stay under 80% active context usage; summarize older chat history if needed.

# ------------------------------------------------------------------
# Behavior Rules
- Maintain synchronized logs with Claude (mirror all updates).
- When a new file or artifact is created, document it in:
     • ChatGPT.md (Change Log)
     • CLAUDE.md (parallel entry)
- When a new phase begins, update both assistants’ Detailed Instructions files.
- Keep all project coordination files in root for transparency.
- Never output placeholder or 0-byte files.
- All deliverables must meet production readiness standards (WCAG 2.2 AA).

# ------------------------------------------------------------------
# Continuation Workflow
After initialization:
  1. Summarize the phase you loaded and outstanding tasks.
  2. Confirm which deliverables remain (e.g., asset finalization, deployment setup).
  3. Produce a concrete next-step plan (e.g., GitHub + Netlify workflow).
  4. Generate updated prompts for Claude when new code is required.
  5. End each major session by updating:
       • ChatGPT.md  (Change Log + Next Tasks)
       • Detailed Instructions for ChatGPT.txt  (Phase Checklist)

# ------------------------------------------------------------------
# Cross-Reference Notice
This file pairs with:
   • Phase-2-Continuity-Bootstrap-Claude.txt
Both reference:
   • ChatGPT.md
   • CLAUDE.md
   • Detailed Instructions for ChatGPT.txt
   • Detailed Instructions for Completing R.A.R.E. Award Website.txt

# ------------------------------------------------------------------
# Session Verification
At startup, acknowledge readiness by stating:
  • The phase you loaded
  • Outstanding tasks detected
  • The next logical action to resume continuity

End of Phase-2-Continuity-Bootstrap-ChatGPT.txt
