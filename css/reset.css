/* Modern CSS Reset with Enhancements */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  font-size: 16px;
  scroll-behavior: smooth;
  scroll-padding-top: 5rem; /* Account for fixed header */
}

/* Remove default margin and padding */
body,
h1, h2, h3, h4, h5, h6,
p, figure, blockquote,
dl, dd, ol, ul {
  margin: 0;
  padding: 0;
}

/* Set core defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
  font-family: var(--font-sans);
  font-weight: var(--fw-regular);
  color: var(--color-gray-900);
  background-color: var(--color-white);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  overflow-x: hidden;
}

/* Remove list styles */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Remove default list styles when class is present */
ul.no-style,
ol.no-style {
  list-style: none;
}

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-serif);
  font-weight: var(--fw-bold);
  line-height: var(--lh-tight);
  text-wrap: balance;
}

/* Links */
a {
  color: inherit;
  text-decoration: none;
  transition: color var(--transition-fast);
}

a:not([class]) {
  text-decoration-skip-ink: auto;
  color: var(--color-teal);
  text-decoration: underline;
  text-underline-offset: 2px;
}

a:hover {
  color: var(--color-teal-dark);
}

/* Make images easier to work with */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

/* Preserve aspect ratio */
img {
  font-style: italic;
  background-repeat: no-repeat;
  background-size: cover;
  shape-margin: 0.75rem;
  object-fit: cover;
}

/* SVG fill color */
svg {
  fill: currentColor;
}

/* Input defaults */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
  background: transparent;
  border: var(--border-width-thin) solid var(--color-gray-300);
  border-radius: var(--border-radius-base);
  padding: var(--space-2) var(--space-3);
  transition: all var(--transition-fast);
}

/* Button resets */
button {
  cursor: pointer;
  border: none;
  background: none;
  padding: 0;
  font: inherit;
  color: inherit;
  text-align: inherit;
}

button:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

/* Textarea */
textarea {
  min-height: 6rem;
  resize: vertical;
}

/* Remove input type number arrows */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

/* Focus visible styles */
:focus-visible {
  outline: 2px solid var(--color-gold);
  outline-offset: 2px;
}

/* Selection styles */
::selection {
  background-color: var(--color-gold-subtle);
  color: var(--color-navy);
}

/* Placeholder styles */
::placeholder {
  color: var(--color-gray-400);
  opacity: 1;
}

/* Table styles */
table {
  border-collapse: collapse;
  width: 100%;
}

/* Dialog styles */
dialog {
  max-width: 90vw;
  max-height: 90vh;
  padding: var(--space-6);
  border: none;
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-2xl);
}

dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
}

/* Details/Summary */
details {
  border: var(--border-width-thin) solid var(--color-gray-200);
  border-radius: var(--border-radius-md);
  padding: var(--space-4);
  margin-bottom: var(--space-4);
}

summary {
  cursor: pointer;
  font-weight: var(--fw-semibold);
  padding: var(--space-2);
  list-style: none;
}

summary::-webkit-details-marker {
  display: none;
}

summary::before {
  content: 'â–¶';
  display: inline-block;
  margin-right: var(--space-2);
  transition: transform var(--transition-fast);
}

details[open] summary::before {
  transform: rotate(90deg);
}

/* Horizontal rule */
hr {
  border: none;
  height: 1px;
  background: linear-gradient(to right, transparent, var(--color-gray-300), transparent);
  margin: var(--space-8) 0;
}

/* Abbreviations */
abbr[title] {
  text-decoration: underline dotted;
  cursor: help;
}

/* Mark/highlight */
mark {
  background: var(--color-gold-subtle);
  color: var(--color-navy);
  padding: 0 var(--space-1);
  border-radius: var(--border-radius-sm);
}

/* Code blocks */
pre {
  font-family: var(--font-mono);
  background: var(--color-gray-100);
  padding: var(--space-4);
  border-radius: var(--border-radius-md);
  overflow-x: auto;
  line-height: var(--lh-relaxed);
}

code {
  font-family: var(--font-mono);
  background: var(--color-gray-100);
  padding: var(--space-1);
  border-radius: var(--border-radius-sm);
  font-size: 0.9em;
}

pre code {
  background: none;
  padding: 0;
}

/* Blockquote */
blockquote {
  border-left: 4px solid var(--color-gold);
  padding-left: var(--space-4);
  margin: var(--space-4) 0;
  font-style: italic;
  color: var(--color-gray-600);
}

/* Small text */
small {
  font-size: var(--fs-sm);
}

/* Subscript and Superscript */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Definition list */
dt {
  font-weight: var(--fw-semibold);
  margin-top: var(--space-4);
}

dd {
  margin-left: var(--space-4);
  margin-bottom: var(--space-2);
}

/* Address */
address {
  font-style: normal;
  line-height: var(--lh-relaxed);
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto !important;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Print styles */
@media print {
  * {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  
  a,
  a:visited {
    text-decoration: underline;
  }
  
  a[href]::after {
    content: " (" attr(href) ")";
  }
  
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
  
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  
  img {
    page-break-inside: avoid;
  }
  
  h2,
  h3 {
    page-break-after: avoid;
  }
}